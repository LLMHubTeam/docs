{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenRouter Completion API",
    "description": "OpenRouter API for text completion requests",
    "version": "1.0.0",
    "contact": {
      "url": "https://openrouter.ai"
    }
  },
  "servers": [
    {
      "url": "https://openrouter.ai/api/v1",
      "description": "OpenRouter API server"
    }
  ],
  "paths": {
    "/completions": {
      "post": {
        "summary": "Create completion",
        "description": "Send a completion request to a selected model (text-only format)",
        "operationId": "createCompletion",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletionRequest"
              },
              "examples": {
                "basic_completion": {
                  "summary": "Basic completion request",
                  "value": {
                    "model": "gpt-3.5-turbo",
                    "prompt": "Write a short story about a robot"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Completions"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer token authentication using your OpenRouter API key"
      }
    },
    "schemas": {
      "CompletionRequest": {
        "type": "object",
        "required": ["model", "prompt"],
        "properties": {
          "model": {
            "type": "string",
            "description": "The model to use for completion",
            "example": "gpt-3.5-turbo"
          },
          "prompt": {
            "type": "string",
            "description": "The text prompt to complete",
            "example": "Write a short story about"
          },
          "max_tokens": {
            "type": "integer",
            "description": "The maximum number of tokens to generate",
            "minimum": 1,
            "maximum": 4096,
            "example": 100
          },
          "temperature": {
            "type": "number",
            "description": "Controls randomness in the output. Higher values make output more random",
            "minimum": 0,
            "maximum": 2,
            "example": 0.7
          },
          "top_p": {
            "type": "number",
            "description": "An alternative to sampling with temperature. Controls nucleus sampling",
            "minimum": 0,
            "maximum": 1,
            "example": 0.9
          },
          "frequency_penalty": {
            "type": "number",
            "description": "Reduces repetition of frequent tokens",
            "minimum": -2,
            "maximum": 2,
            "example": 0
          },
          "presence_penalty": {
            "type": "number",
            "description": "Reduces repetition of tokens that appear in the text",
            "minimum": -2,
            "maximum": 2,
            "example": 0
          },
          "stop": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 4
              }
            ],
            "description": "Up to 4 sequences where the API will stop generating further tokens"
          },
          "stream": {
            "type": "boolean",
            "description": "Whether to stream back partial progress",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "CompletionResponse": {
        "type": "object",
        "required": ["id", "object", "created", "model", "choices"],
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the completion",
            "example": "cmpl-7QyqpwdfhqwajicIEznoc6Q47XAyW"
          },
          "object": {
            "type": "string",
            "enum": ["text_completion"],
            "description": "The object type, always 'text_completion'"
          },
          "created": {
            "type": "integer",
            "description": "The Unix timestamp of when the completion was created",
            "example": 1677652288
          },
          "model": {
            "type": "string",
            "description": "The model used for the completion",
            "example": "gpt-3.5-turbo"
          },
          "choices": {
            "type": "array",
            "description": "A list of completion choices",
            "items": {
              "$ref": "#/components/schemas/CompletionChoice"
            }
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        },
        "additionalProperties": false
      },
      "CompletionChoice": {
        "type": "object",
        "required": ["text", "index", "finish_reason"],
        "properties": {
          "text": {
            "type": "string",
            "description": "The generated completion text",
            "example": " a brave knight who saved the kingdom from an evil dragon."
          },
          "index": {
            "type": "integer",
            "description": "The index of this choice in the list of choices",
            "example": 0
          },
          "finish_reason": {
            "type": "string",
            "enum": ["stop", "length", "content_filter"],
            "description": "The reason the completion finished",
            "example": "stop"
          },
          "logprobs": {
            "type": "object",
            "nullable": true,
            "description": "Log probability information for the choice tokens"
          }
        },
        "additionalProperties": false
      },
      "Usage": {
        "type": "object",
        "required": ["prompt_tokens", "completion_tokens", "total_tokens"],
        "properties": {
          "prompt_tokens": {
            "type": "integer",
            "description": "Number of tokens in the prompt",
            "example": 5
          },
          "completion_tokens": {
            "type": "integer",
            "description": "Number of tokens in the completion",
            "example": 12
          },
          "total_tokens": {
            "type": "integer",
            "description": "Total number of tokens used",
            "example": 17
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "type": "object",
            "required": ["message", "type"],
            "properties": {
              "message": {
                "type": "string",
                "description": "A human-readable error message",
                "example": "Invalid model specified"
              },
              "type": {
                "type": "string",
                "description": "The type of error",
                "example": "invalid_request_error"
              },
              "code": {
                "type": "string",
                "description": "Error code if applicable",
                "example": "model_not_found"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "Completions",
      "description": "Text completion operations"
    }
  ]
}